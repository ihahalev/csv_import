{"version":3,"sources":["components/UserList.jsx","components/App.jsx","utils/csvConverter.js","utils/validator.js","index.js"],"names":["UserList","headers","users","errors","map","header","user","i","cls","className","id","App","useState","setUsers","noFile","setNoFile","setHeaders","setErrors","hiddenFileInput","React","useRef","onClick","e","current","value","click","name","type","ref","onChange","file","target","files","rawRead","reader","FileReader","onload","rawUsers","csv","lines","split","result","length","obj","currentline","j","trim","push","csvConverter","isFullName","hasOwnProperty","isPhone","isEmail","console","log","valideData","NAME","PHONE","EMAIL","AGE","EXP","INCOME","KIDS","STATES","DATE","LIC","DUPL","forEach","rawUser","idx","errorField","includes","charAt","test","toLowerCase","duplId","findIndex","item","duplUser","duplErr","ageNum","Number","isInteger","expNum","isNaN","toFixed","toUpperCase","multiStates","shortStates","Object","keys","usStates","nameStates","values","shortWrite","state","index","indexOf","join","today","Date","expDate","getTime","validator","readAsText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f771e56a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './UserList.css';\r\n\r\nfunction UserList({ headers, users, errors }) {\r\n  return (\r\n    <table >\r\n      <thead >\r\n        <tr>\r\n          {headers.map( header => (\r\n            <th key={header}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users.map((user, i) => (\r\n          <tr key={user.id} >\r\n          {headers.map( header => {\r\n            const err = errors[i];\r\n            let cls='';\r\n            if (err[header]) cls = 'error';\r\n            return <td key={user.id+header} className={cls}>{user[header]}</td>\r\n          })}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    // <ul>\r\n    //   {headers.map(header => (\r\n    //     <li key={header}>{header}</li>\r\n    //   ))}\r\n    // </ul>\r\n  );\r\n}\r\n\r\nexport default UserList;","import React, { useState } from 'react';\nimport UserList from './UserList';\n\nimport csvConverter from '../utils/csvConverter';\nimport validator from '../utils/validator';\n\nimport './App.css';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [noFile, setNoFile] = useState(false);\n  const [headers, setHeaders] = useState([]);\n  const [errors, setErrors] = useState([]);\n\n  const hiddenFileInput = React.useRef(null);\n\n  const handleClick = e => {\n    hiddenFileInput.current.value = \"\";\n    hiddenFileInput.current.click();\n  };\n\n  const handleOpen = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n    let rawRead;\n    const reader = new FileReader();\n    reader.onload = function (e) {\n\n      rawRead = csvConverter(e.target.result);\n      const rawUsers = rawRead.result;\n\n      const isFullName = rawUsers[0].hasOwnProperty('Full Name');\n      const isPhone = rawUsers[0].hasOwnProperty('Phone');\n      const isEmail = rawUsers[0].hasOwnProperty('Email');\n\n      if (!isFullName || !isPhone || !isEmail) {\n        setNoFile(true);\n      } else {\n        setNoFile(false);\n        console.log(rawUsers);\n        const valideData = validator(rawRead);\n        setUsers([...valideData.users]);\n        setErrors([...valideData.errors]);\n        setHeaders([...rawRead.headers]);\n      }\n\n    };\n    reader.readAsText(file);\n  };\n  return (\n    <div className=\"App\">\n      <button onClick={handleClick}>Import users</button>\n      <input name=\"file\" type=\"file\" ref={hiddenFileInput} onChange={handleOpen}/>\n\n\n      {noFile ? <div className=\"bad-format\">File format is not correct</div> \n      : <UserList headers={headers} users={users} errors={errors}/>}\n    </div>\n  );\n}\n\nexport default App;\n","export default function (csv) {\r\n  const lines = csv.split('\\r');\r\n  const result = [];\r\n  const headers = ['id', ...lines[0].split(';'), 'Duplicate with'];\r\n\r\n  for (let i = 1; i < lines.length; i++) {\r\n    const obj = {};\r\n    const currentline = lines[i].split(';');\r\n\r\n    if (currentline[0] === '\\n') {\r\n      break;\r\n    }\r\n    obj[headers[0]] = i;\r\n    for (let j = 0; j < currentline.length; j++) {\r\n      if (currentline[j]) {\r\n        obj[headers[j + 1]] = currentline[j].trim();\r\n      }\r\n    }\r\n    obj[headers[headers.length - 1]] = null;\r\n    result.push(obj);\r\n  }\r\n\r\n  return { headers, result };\r\n}\r\n","import usStates from '../utils/usStates.json';\r\n\r\nexport default function ({ result: rawUsers, headers }) {\r\n  const NAME = headers[1];\r\n  const PHONE = headers[2];\r\n  const EMAIL = headers[3];\r\n  const AGE = headers[4];\r\n  const EXP = headers[5];\r\n  const INCOME = headers[6];\r\n  const KIDS = headers[7];\r\n  const STATES = headers[8];\r\n  const DATE = headers[9];\r\n  const LIC = headers[10];\r\n  const DUPL = headers[11];\r\n\r\n  const errors = [];\r\n  const users = [];\r\n  rawUsers.forEach((rawUser, idx) => {\r\n    const user = {};\r\n    const errorField = {};\r\n    user.id = rawUser.id;\r\n\r\n    //Name\r\n    user[NAME] = rawUser[NAME];\r\n    errorField[NAME] = false;\r\n    //Phone validation\r\n    errorField[PHONE] = true;\r\n    if (rawUser[PHONE]) {\r\n      user[PHONE] = rawUser[PHONE];\r\n      if (rawUser[PHONE].includes('+1') && rawUser[PHONE].length === 12) {\r\n        errorField[PHONE] = false;\r\n      }\r\n      if (rawUser[PHONE].charAt(0) === '1' && rawUser[PHONE].length === 11) {\r\n        errorField[PHONE] = false;\r\n        user[PHONE] = '+' + rawUser[PHONE];\r\n      }\r\n      if (rawUser[PHONE].length === 10) {\r\n        errorField[PHONE] = false;\r\n        user[PHONE] = '+1' + rawUser[PHONE];\r\n      }\r\n    }\r\n\r\n    //Email validation\r\n    errorField[EMAIL] = true;\r\n    if (rawUser[EMAIL]) {\r\n      user[EMAIL] = rawUser[EMAIL];\r\n      const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n      if (re.test(rawUser[EMAIL].toLowerCase())) {\r\n        errorField[EMAIL] = false;\r\n      }\r\n    }\r\n\r\n    //Duplicate check\r\n    if (users.length > 0) {\r\n      //Phone\r\n      let duplId = users.findIndex((item) => item[PHONE] === user[PHONE]);\r\n      if (duplId > -1) {\r\n        const duplUser = users[duplId];\r\n        const duplErr = errors[duplId];\r\n\r\n        if (!duplUser[DUPL]) {\r\n          duplUser[DUPL] = idx;\r\n          user[DUPL] = duplId;\r\n          duplErr[PHONE] = true;\r\n          errorField[PHONE] = true;\r\n        }\r\n      }\r\n      //Email\r\n      if (!user[DUPL]) {\r\n        duplId = users.findIndex((item) => {\r\n          if (item[EMAIL] && user[EMAIL]) {\r\n            if (item[EMAIL].toLowerCase() === user[EMAIL].toLowerCase()) {\r\n              return true;\r\n            }\r\n          }\r\n        });\r\n        if (duplId > -1) {\r\n          const duplUser = users[duplId];\r\n          const duplErr = errors[duplId];\r\n\r\n          if (!duplUser[DUPL]) {\r\n            duplUser[DUPL] = idx;\r\n            user[DUPL] = duplId;\r\n            duplErr[EMAIL] = true;\r\n            errorField[EMAIL] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Age validation\r\n    const ageNum = Number(rawUser[AGE]);\r\n    errorField[AGE] = true;\r\n    user[AGE] = ageNum;\r\n    if (Number.isInteger(ageNum) && ageNum >= 21) {\r\n      errorField[AGE] = false;\r\n    }\r\n\r\n    //Experience validation\r\n    const expNum = Number(rawUser[EXP]);\r\n    errorField[EXP] = true;\r\n    user[EXP] = rawUser[EXP];\r\n    if (Number.isInteger(ageNum)) {\r\n      if (Number.isInteger(expNum) && expNum >= 0 && expNum <= user[AGE]) {\r\n        errorField[EXP] = false;\r\n      }\r\n    }\r\n\r\n    //Income validation\r\n    if (Number.isNaN(Number(rawUser[INCOME]))) {\r\n      errorField[INCOME] = true;\r\n      user[INCOME] = rawUser[INCOME];\r\n    } else {\r\n      errorField[INCOME] = false;\r\n      user[INCOME] = +Number(rawUser[INCOME]).toFixed(2);\r\n    }\r\n\r\n    //Has children validation\r\n    if (rawUser[KIDS]) {\r\n      if (rawUser[KIDS].toUpperCase() === 'TRUE') {\r\n        user[KIDS] = rawUser[KIDS].toUpperCase();\r\n        errorField[KIDS] = false;\r\n      } else if (rawUser[KIDS].toUpperCase() === 'FALSE') {\r\n        user[KIDS] = rawUser[KIDS].toUpperCase();\r\n        errorField[KIDS] = false;\r\n      } else {\r\n        user[KIDS] = rawUser[KIDS];\r\n        errorField[KIDS] = true;\r\n      }\r\n    } else {\r\n      user[KIDS] = 'FALSE';\r\n      errorField[KIDS] = false;\r\n    }\r\n\r\n    //States validation\r\n    const shortStates = Object.keys(usStates);\r\n    const nameStates = Object.values(usStates);\r\n    if (rawUser[STATES]) {\r\n      let multiStates;\r\n      if (rawUser[STATES].includes(', ')) {\r\n        multiStates = rawUser[STATES].split(', ');\r\n      }\r\n      if (rawUser[STATES].includes(' | ')) {\r\n        multiStates = rawUser[STATES].split(' | ');\r\n      }\r\n      if (multiStates) {\r\n        const shortWrite = [];\r\n        for (const state of multiStates) {\r\n          if (state.length === 2) {\r\n            if (shortStates.includes(state.toUpperCase())) {\r\n              shortWrite.push(state.toUpperCase());\r\n              errorField[STATES] = false;\r\n            } else {\r\n              errorField[STATES] = true;\r\n              break;\r\n            }\r\n          } else {\r\n            if (nameStates.includes(state)) {\r\n              const index = nameStates.indexOf(state);\r\n              shortWrite.push(shortStates[index]);\r\n              errorField[STATES] = false;\r\n            } else {\r\n              errorField[STATES] = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (errorField[STATES]) {\r\n          user[STATES] = multiStates.join(' | ');\r\n        } else {\r\n          user[STATES] = shortWrite.join(' | ');\r\n        }\r\n      } else {\r\n        if (rawUser[STATES].length === 2) {\r\n          if (shortStates.includes(rawUser[STATES].toUpperCase())) {\r\n            errorField[STATES] = false;\r\n          } else {\r\n            errorField[STATES] = true;\r\n          }\r\n          user[STATES] = rawUser[STATES].toUpperCase();\r\n        } else {\r\n          if (nameStates.includes(rawUser[STATES])) {\r\n            errorField[STATES] = false;\r\n          } else {\r\n            errorField[STATES] = true;\r\n          }\r\n          const index = nameStates.indexOf(rawUser[STATES]);\r\n          user[STATES] = shortStates[index];\r\n        }\r\n      }\r\n    } else {\r\n      errorField[STATES] = true;\r\n    }\r\n\r\n    //Expiration date validation\r\n    errorField[DATE] = true;\r\n    user[DATE] = rawUser[DATE];\r\n    const today = new Date();\r\n    const expDate = new Date(rawUser[DATE]);\r\n    console.log(`${today}`, `${rawUser[DATE]}`);\r\n    if (today.getTime() <= expDate.getTime()) {\r\n      if (rawUser[DATE].indexOf('-') === 4 || rawUser[DATE].indexOf('/') === 2) {\r\n        errorField[DATE] = false;\r\n      }\r\n    }\r\n\r\n    //License validation\r\n    user[LIC] = rawUser[LIC];\r\n    errorField[LIC] = true;\r\n    if (rawUser[LIC]) {\r\n      const re = /^[a-zA-Z0-9]{6}$/;\r\n      if (re.test(rawUser[LIC].toLowerCase())) {\r\n        errorField[LIC] = false;\r\n      }\r\n    }\r\n\r\n    users.push(user);\r\n    errors.push(errorField);\r\n  });\r\n  console.log(users);\r\n  console.log(errors);\r\n  return { users, errors };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}